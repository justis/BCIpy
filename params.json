{"name":"BCIpy","tagline":"Analysing EEG waves for Educational Data Mining","body":"<!--\r\n# Copyright 2013, 2014 Justis Grant Peters and Sagar Jauhari\r\n\r\n# This file is part of BCIpy.\r\n# \r\n# BCIpy is free software: you can redistribute it and/or modify\r\n# it under the terms of the GNU General Public License as published by\r\n# the Free Software Foundation, either version 3 of the License, or\r\n# (at your option) any later version.\r\n# \r\n# BCIpy is distributed in the hope that it will be useful,\r\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n# GNU General Public License for more details.\r\n# \r\n# You should have received a copy of the GNU General Public License\r\n# along with BCIpy.  If not, see <http://www.gnu.org/licenses/>.\r\n-->\r\n&copy; 2013, 2014 Justis Grant Peters and Sagar Jauhari\r\n\r\n# BCIpy\r\n#### Python toolkit to analyse EEG data\r\nCode repository for our project in Educational Data Mining class with Dr. Tiffany Barnes, CSC 591-021 Fall 2013 at NCSU. We are analyzing EEG data collected by Mostow and Chang from Project LISTEN.\r\n\r\n## Using the data processing pipeline\r\n\t$ python process_eeg.py -h\r\n\tusage: process_eeg.py [-h] -i INDIR -o OUTDIR [--interpolate] [--kernelsvm]\r\n                      \t[--chartsforpaper]\r\n\r\n\tProcess EEG Data.\r\n\t\r\n\toptional arguments:\r\n\t  -h, --help        show this help message and exit\r\n\t  -i INDIR          Directory containing raw EEG Files.\r\n\t  -o OUTDIR         Path of processed data and reports. New directory with\r\n\t                    timestamp will be created inside this folder.\r\n\t  --interpolate     Interpolate 512Hz time stamps on 512Hz data having 1Hz\r\n\t                    time stamps (raw data available from CMU)\r\n\t  --kernelsvm       Perform Kernelized SVC on interpolated raw data\r\n\t  --chartsforpaper  Create charts in single page PDF files.\r\n\r\n\r\n## Processing timeseries data from CMU\r\nThe 512Hz data from CMU has timestamp information, but only at 1Hz resolution. To interpolate these:\r\n<pre>\r\npython process_series_files.py data/raw/ preprocess/raw/\r\n</pre>\r\n\r\n## Using slicer\r\nThe Slicer class manages timeseries and extracted features as they relate to tasks from task.xls.\r\n\r\n\t# instantiating task slicer\r\n\ts = Slicer()\r\n\r\n\tif len(sys.argv) > 2:\r\n\t\t\tprint 'loading raw from list of csvfiles'\r\n\t\t\ts.load_series_from_csv('raw', sys.argv[1:])\r\n\telse:\r\n\t\t\tprint 'loading raw from pickle'\r\n\t\t\ts.load_series_from_pickle('raw', sys.argv[1])\r\n\r\n\t# extract features from 'raw'\r\n\ts.extract_filtered_signal()\r\n\ts.extract_rolling_median()\r\n\ts.extract_rolling_PSD()\r\n\r\n\t# fetch task 1, with features\r\n\t# Return type is a dict, with task-level features, plus the requested timeseries features\r\n\tprint s.get_by_task_id(1, features=['raw','raw_rolling_PSD_512', 'raw_rolling_median_128'])\r\n\r\n## Using Python notebooks\r\n<pre>\r\nsudo apt-get install ipython\r\ngit clone git@github.com:sagarjauhari/edm_eeg.git edm_eeg.git\r\ncd edm_eeg.git\r\nipython notebook --pylab-inline\r\n</pre>\r\n\r\n## Running R scripts\r\nTo run an R script, for example sketchpad.R:\r\n<pre>\r\ncd dir-with-eeg-data/\r\nR --vanilla &lt; /path/to/sketchpad.R\r\n</pre>\r\n\r\nIt will produce a PDF called Rplots.pdf with a page for each chart produced by the script.\r\n\r\n## Patching the data\r\nIf you're using eeg_data_set2.zip_, you will want to fix the first line in 20101214171219.1.rawwave.csv to look like this:\r\n<pre>\r\n%Time,Value\r\n</pre>\r\n\r\n# License and Copyright\r\n&copy; 2013, 2014 Justis Grant Peters and Sagar Jauhari\r\n\r\nThis file is part of BCIpy.\r\n\r\nBCIpy is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nBCIpy is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with BCIpy.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n# Dependencies\r\n- [PyEEG](https://code.google.com/p/pyeeg/) - Licenced under GPL V3\r\n\r\n","google":"UA-49705309-1","note":"Don't delete this file! It's used internally to help with page regeneration."}